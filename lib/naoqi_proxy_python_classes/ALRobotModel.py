#!/usr/bin/env python
# Class autogenerated from .\alrobotmodelproxy.h
# by Sammy Pfeiffer's <Sammy.Pfeiffer at student.uts.edu.au> generator
# You need an ALBroker running





class ALRobotModel(object):
    def __init__(self, session):
        self.session = session
        self.proxy = None

    def force_connect(self):
        self.proxy = self.session.service("ALRobotModel")

    def getConfig(self):
        """Return the RobotConfig key/value pairs serialized in xml format

        :returns str: the RobotConfig key/value pairs in xml format
        """
        if not self.proxy:
            self.proxy = self.session.service("ALRobotModel")
        return self.proxy.getConfig()

    def ping(self):
        """Just a ping. Always returns true

        :returns bool: returns true
        """
        if not self.proxy:
            self.proxy = self.session.service("ALRobotModel")
        return self.proxy.ping()

    def version(self):
        """Returns the version of the module.

        :returns str: A string containing the version of the module.
        """
        if not self.proxy:
            self.proxy = self.session.service("ALRobotModel")
        return self.proxy.version()
